import urllib,urllib2,re,urlparse
import os
import sys
from lxml import html

try:
	path = os.getcwd().split("?\\")[1].split('Plug-in Support')[0]+"Plug-ins/OnlineMoviesPro.bundle/Contents/Code/Modules/OnlineMoviesPro"
except:
	path = os.getcwd().split("Plug-in Support")[0]+"Plug-ins/OnlineMoviesPro.bundle/Contents/Code/Modules/OnlineMoviesPro"
if path not in sys.path:
	sys.path.append(path)

import jsbeautifier
import cfscrape
scraper = cfscrape.create_scraper()

########################################################################################
def NormalizeURL(url):

	return url.split('&')[0]


########################################################################################
def MetadataObjectForURL(url):

	page = scraper.get(url)
	page_html = html.fromstring(page.text)

	title = page_html.xpath("//h1[@class='border-radius-top-5']/span/text()")[0]
	try:
		description = page_html.xpath("//div[@id='video-synopsys']/p[2]/text()")[0]
	except:
		description = title
	thumb = page_html.xpath("//meta[@itemprop='image']/@content")[0]

	return VideoClipObject(
		title = title,
		summary = description,
		thumb = thumb
	)

########################################################################################
def MediaObjectsForURL(url):

	return [
        	MediaObject(
			parts = [
				PartObject(
					key = 
						Callback(
							PlayVideo,
							url = url,
							fmt = 720,
							post_url = url
						)
					)
				]
			)
	]

#######################################################################################
def PlayVideo(url, fmt):

	page = scraper.get(url)
	page_html = html.fromstring(page.text)
	url = page_html.xpath("//div[@class='video-embed']/iframe/@src")[0]

	if "google" in url:
		return IndirectResponse(VideoClipObject, key = url)
	else:
		url = urlparse.urlparse(url).query
		url = urlparse.parse_qs(url)['ref'][0]
		url = 'http://videomega.tv/iframe.php?ref=%s' % url
		referer = url
		req = urllib2.Request(url,None)
		req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; rv:34.0) Gecko/20100101 Firefox/34.0')
		req.add_header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8')
		req.add_header('Referer', referer)
		response = urllib2.urlopen(req)
		link = response.read()
		response.close()

		filekey = Regex('eval([^"]+.*)').search(link).group(0)
		video_url = jsbeautifier.beautify(filekey)
		video_url = video_url.replace('$("video").attr("src", "','',1).replace('");','',1)

		return Redirect(video_url)

